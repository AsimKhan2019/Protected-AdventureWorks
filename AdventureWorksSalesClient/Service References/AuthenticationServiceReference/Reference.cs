//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AdventureWorksSalesClient.AuthenticationServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="LoginCredentials", Namespace="http://schemas.datacontract.org/2004/07/AdventureWorksSalesService")]
    [System.SerializableAttribute()]
    public partial class LoginCredentials : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string PasswordField;
        
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="HandshakeToken", Namespace="http://schemas.datacontract.org/2004/07/AdventureWorksSalesService")]
    [System.SerializableAttribute()]
    public partial class HandshakeToken : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime ExpiresUtcField;
        
        private string IdentifierField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime ExpiresUtc {
            get {
                return this.ExpiresUtcField;
            }
            set {
                if ((this.ExpiresUtcField.Equals(value) != true)) {
                    this.ExpiresUtcField = value;
                    this.RaisePropertyChanged("ExpiresUtc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Identifier {
            get {
                return this.IdentifierField;
            }
            set {
                if ((object.ReferenceEquals(this.IdentifierField, value) != true)) {
                    this.IdentifierField = value;
                    this.RaisePropertyChanged("Identifier");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SecondFactor", Namespace="http://schemas.datacontract.org/2004/07/AdventureWorksSalesService")]
    [System.SerializableAttribute()]
    public partial class SecondFactor : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private string OneTimeUseCodeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string OneTimeUseCode {
            get {
                return this.OneTimeUseCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.OneTimeUseCodeField, value) != true)) {
                    this.OneTimeUseCodeField = value;
                    this.RaisePropertyChanged("OneTimeUseCode");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AuthToken", Namespace="http://schemas.datacontract.org/2004/07/AdventureWorksSalesService")]
    [System.SerializableAttribute()]
    public partial class AuthToken : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        private System.DateTime ExpiresUtcField;
        
        private string HashField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public System.DateTime ExpiresUtc {
            get {
                return this.ExpiresUtcField;
            }
            set {
                if ((this.ExpiresUtcField.Equals(value) != true)) {
                    this.ExpiresUtcField = value;
                    this.RaisePropertyChanged("ExpiresUtc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(IsRequired=true)]
        public string Hash {
            get {
                return this.HashField;
            }
            set {
                if ((object.ReferenceEquals(this.HashField, value) != true)) {
                    this.HashField = value;
                    this.RaisePropertyChanged("Hash");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AuthenticationServiceReference.IAuthenticationService")]
    public interface IAuthenticationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/BeginLogin", ReplyAction="http://tempuri.org/IAuthenticationService/BeginLoginResponse")]
        AdventureWorksSalesClient.AuthenticationServiceReference.HandshakeToken BeginLogin(AdventureWorksSalesClient.AuthenticationServiceReference.LoginCredentials credentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/BeginLogin", ReplyAction="http://tempuri.org/IAuthenticationService/BeginLoginResponse")]
        System.Threading.Tasks.Task<AdventureWorksSalesClient.AuthenticationServiceReference.HandshakeToken> BeginLoginAsync(AdventureWorksSalesClient.AuthenticationServiceReference.LoginCredentials credentials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/CancelLogin", ReplyAction="http://tempuri.org/IAuthenticationService/CancelLoginResponse")]
        void CancelLogin(AdventureWorksSalesClient.AuthenticationServiceReference.HandshakeToken handshakeToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/CancelLogin", ReplyAction="http://tempuri.org/IAuthenticationService/CancelLoginResponse")]
        System.Threading.Tasks.Task CancelLoginAsync(AdventureWorksSalesClient.AuthenticationServiceReference.HandshakeToken handshakeToken);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/FinishLogin", ReplyAction="http://tempuri.org/IAuthenticationService/FinishLoginResponse")]
        AdventureWorksSalesClient.AuthenticationServiceReference.AuthToken FinishLogin(AdventureWorksSalesClient.AuthenticationServiceReference.HandshakeToken handshakeToken, AdventureWorksSalesClient.AuthenticationServiceReference.SecondFactor secondFactor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/FinishLogin", ReplyAction="http://tempuri.org/IAuthenticationService/FinishLoginResponse")]
        System.Threading.Tasks.Task<AdventureWorksSalesClient.AuthenticationServiceReference.AuthToken> FinishLoginAsync(AdventureWorksSalesClient.AuthenticationServiceReference.HandshakeToken handshakeToken, AdventureWorksSalesClient.AuthenticationServiceReference.SecondFactor secondFactor);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/Logout", ReplyAction="http://tempuri.org/IAuthenticationService/LogoutResponse")]
        void Logout(AdventureWorksSalesClient.AuthenticationServiceReference.AuthToken token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthenticationService/Logout", ReplyAction="http://tempuri.org/IAuthenticationService/LogoutResponse")]
        System.Threading.Tasks.Task LogoutAsync(AdventureWorksSalesClient.AuthenticationServiceReference.AuthToken token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthenticationServiceChannel : AdventureWorksSalesClient.AuthenticationServiceReference.IAuthenticationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthenticationServiceClient : System.ServiceModel.ClientBase<AdventureWorksSalesClient.AuthenticationServiceReference.IAuthenticationService>, AdventureWorksSalesClient.AuthenticationServiceReference.IAuthenticationService {
        
        public AuthenticationServiceClient() {
        }
        
        public AuthenticationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthenticationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthenticationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public AdventureWorksSalesClient.AuthenticationServiceReference.HandshakeToken BeginLogin(AdventureWorksSalesClient.AuthenticationServiceReference.LoginCredentials credentials) {
            return base.Channel.BeginLogin(credentials);
        }
        
        public System.Threading.Tasks.Task<AdventureWorksSalesClient.AuthenticationServiceReference.HandshakeToken> BeginLoginAsync(AdventureWorksSalesClient.AuthenticationServiceReference.LoginCredentials credentials) {
            return base.Channel.BeginLoginAsync(credentials);
        }
        
        public void CancelLogin(AdventureWorksSalesClient.AuthenticationServiceReference.HandshakeToken handshakeToken) {
            base.Channel.CancelLogin(handshakeToken);
        }
        
        public System.Threading.Tasks.Task CancelLoginAsync(AdventureWorksSalesClient.AuthenticationServiceReference.HandshakeToken handshakeToken) {
            return base.Channel.CancelLoginAsync(handshakeToken);
        }
        
        public AdventureWorksSalesClient.AuthenticationServiceReference.AuthToken FinishLogin(AdventureWorksSalesClient.AuthenticationServiceReference.HandshakeToken handshakeToken, AdventureWorksSalesClient.AuthenticationServiceReference.SecondFactor secondFactor) {
            return base.Channel.FinishLogin(handshakeToken, secondFactor);
        }
        
        public System.Threading.Tasks.Task<AdventureWorksSalesClient.AuthenticationServiceReference.AuthToken> FinishLoginAsync(AdventureWorksSalesClient.AuthenticationServiceReference.HandshakeToken handshakeToken, AdventureWorksSalesClient.AuthenticationServiceReference.SecondFactor secondFactor) {
            return base.Channel.FinishLoginAsync(handshakeToken, secondFactor);
        }
        
        public void Logout(AdventureWorksSalesClient.AuthenticationServiceReference.AuthToken token) {
            base.Channel.Logout(token);
        }
        
        public System.Threading.Tasks.Task LogoutAsync(AdventureWorksSalesClient.AuthenticationServiceReference.AuthToken token) {
            return base.Channel.LogoutAsync(token);
        }
    }
}
